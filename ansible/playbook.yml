---
- name: Simple Anisble Playbook to Create a VPC and Deploy a Web Server
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - vault.yml
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_key }}"
    DEFAULT_REGION: "{{ default_region }}"

  tasks:
    # Create a VPC
    - name: Create VPC 
      amazon.aws.ec2_vpc_net:
        name: MyVPC
        cidr_block: 10.10.0.0/16
        region: "{{ default_region }}"
        tags:
          Name: MyVPC
      register: vpc
         
    # Create a Subnet
    - name: Create subnet for webserver servers
      amazon.aws.ec2_vpc_subnet:
        state: present
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: 10.10.1.0/24
        az: "{{ default_region }}a"
        region: "{{ default_region }}"
        tags:
          Name: WebserverSubnet
      register: subnet
    
    # Create an Internet Gateway
    - name: Create Internet gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ default_region }}"
        state: present
      register: igw

    # Creat a Route Table
    - name: Set up public subnet route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ default_region }}"
        tags:
          Name: Public_rt
        subnets:
          - "{{ subnet.subnet.id }}"  
        routes:       
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
          - dest: 10.10.0.0/16
            gateway_id: local
      register: public_route_table

    # Create a Security Group
    - name: Security Group for Webserver
      amazon.aws.ec2_security_group:
        name: webserver_sg
        description: Webserver Security Group
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ default_region }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0 
      register: webserver_sg

    # Create an EC2 Instance
    - name: Start an instance with a public IP address
      amazon.aws.ec2_instance:
        name: Webserver
        key_name: "ansible_keys"
        vpc_subnet_id: "{{ subnet.subnet.id }}"
        region: "{{ default_region }}"
        instance_type: t3.micro
          #security_group_ids: 
          # - "{{ webserver_sg.group_id }}"
        wait: true
        network_interfaces:
          - assign_public_ip: true
            # subnet_id: "{{ subnet_subnet_id }}"
            groups:
              - "{{ webserver_sg.group_id }}"
        image_id: ami-042b4708b1d05f512
        tags:
          Environment: Testing
        user_data: "{{ lookup('template', 'bootstrap.sh.j2') }}"
      register: ec2
...    
